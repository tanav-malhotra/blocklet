name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: blocklet
            asset_name: blocklet-linux-amd64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: blocklet.exe
            asset_name: blocklet-windows-amd64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: blocklet
            asset_name: blocklet-macos-amd64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: blocklet
            asset_name: blocklet-macos-arm64

    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
      
      - name: Build
        run: cargo build --release --target ${{ matrix.target }}
      
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.asset_name }}
          path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
      
      - name: Create release archive
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            7z a ${{ matrix.asset_name }}.zip target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
          else
            tar czf ${{ matrix.asset_name }}.tar.gz -C target/${{ matrix.target }}/release ${{ matrix.artifact_name }}
          fi
      
      - name: Extract changelog for this version
        if: matrix.os == 'ubuntu-latest'
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          awk '/^## \['$VERSION'\]/{flag=1;next}/^## \[/{flag=0}flag' CHANGELOG.md > release_notes.md
      
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ${{ matrix.asset_name }}.*
          body_path: ${{ matrix.os == 'ubuntu-latest' && 'release_notes.md' || '' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-crates:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - run: cargo publish --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}

